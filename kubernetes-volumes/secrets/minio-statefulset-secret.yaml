apiVersion: apps/v1
kind: StatefulSet
metadata:
  # This name uniquely identifies the StatefulSet
  name: minio-secret
spec:
  serviceName: minio-secret
  replicas: 1
  selector:
    matchLabels:
      app: minio-secret # has to match .spec.template.metadata.labels
  template:
    metadata:
      labels:
        app: minio-secret # has to match .spec.selector.matchLabels
    spec:
      containers:
      - name: minio-secret
        env:
        - name: MINIO_ACCESS_KEY
          #value: "minio"
          valueFrom:
            secretKeyRef:
              name: secret-minio
              key: minio_access_key
        - name: MINIO_SECRET_KEY
          #value: "minio123"
          valueFrom:
            secretKeyRef:
              name: secret-minio
              key: minio_secret_key
        image: minio/minio:RELEASE.2019-07-10T00-34-56Z
        args:
        #- address
        #- "9002"
        - server
        - /data
        ports:
        - containerPort: 9002
        # These volume mounts are persistent. Each pod in the PetSet
        # gets a volume mounted based on this field.
        volumeMounts:
        - name: data-secret
          mountPath: /data
        # Liveness probe detects situations where MinIO server instance
        # is not working properly and needs restart. Kubernetes automatically
        # restarts the pods if liveness checks fail.
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9002
          initialDelaySeconds: 120
          periodSeconds: 20
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above. 
  volumeClaimTemplates:
  - metadata:
      name: data-secret
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
